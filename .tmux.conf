###############################################################################
#
# Global tmux configuration
#
###############################################################################

# 256colors -can also use tmux -2 when calling prog
set -g default-terminal "screen-256color"

set-option -g default-shell /bin/bash

# scrollback buffer n lines
set -g history-limit 10000

# dont rename windows
set -g allow-rename off

# listen for activity on all windows
set -g bell-action any

# Keep tmux msgs around longer
set -g display-time 3000

# on-screen time for display-panes in ms
set -g display-panes-time 3000

# start window indexing at one instead of zero, renumber if any are removed
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Disable the delay between an escape key press and subsequent characters
# http://superuser.com/questions/252214/slight-delay-when-switching-modes-in-vim-using-tmux-or-screen
set -sg escape-time 0

# Resize to smallest active view window
setw -g aggressive-resize on

# tmux < v2.1:
#if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]" "setw -g mode-mouse off"
# tmux >= v2.1:
#if-shell "[[ `tmux -V | cut -d' ' -f2` -ge 2.1 ]]" "setw -g mouse off"
# Use both and quietly fail if tmux option does not exist
setw -q -g mode-mouse off
setw -q -g mouse off

# Facilitate use of ssh-agent - default values - inherited from parent shell atm
#set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY""

# enable wm window titles
set -g set-titles on
# wm window title string (uses statusbar variables)
#set -g set-titles-string "tmux.#I.#W"
#set-option -g set-titles-string ' #W  #S:#I.#P @#T' # window number,program name,active (or not)
set-option -g set-titles-string ' #W  #S@#T'
set-window-option -g automatic-rename on

# UTF8 default encoding, no longer required in >=2.2
#if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.2 ]]" "setw -g utf8 on"
#if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.2 ]]" "set -g status-utf8 on"
setw -q -g utf8 on
set -q -g status-utf8 on

#
# --- Keybinds ---
#
# Change prefix to ctrl+a
unbind C-b
set -g prefix C-a
# send the prefix to client inside window (ala nested sessions - C-a C-a C-c)
bind-key C-a send-prefix

# vim bindings
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Make Prefix + 0 go to window number 10 (numbering sarts from 1)
bind 0 select-window -t :10

# confirm before killing a window or the server
bind-key k confirm kill-window
bind-key K confirm kill-server

# ctrl+left/right cycles thru windows, need left/right for vim
#bind-key -n Left previous-window
#bind-key -n Right next-window

# Select Pane
unbind Left
unbind Right
bind-key -n F7 previous-window
bind-key -n F8 next-window

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Vim compatible keys
# y and p as in vim
bind Escape copy-mode
unbind p
bind p paste-buffer
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy C-v rectangle-toggle
#bind -t vi-copy 'y' copy-selection
#bind -t vi-copy 'Space' halfpage-down
#bind -t vi-copy 'Bspace' halfpage-up

# extra commands for interacting with the ICCCM clipboard
#bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
# More user feedback..
# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard > /dev/null\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard )\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
# xsel variations have not confirmed as yet
#bind-key -t vi-copy C-c copy-pipe "xsel -i -p -b" # ??
#bind-key C-v run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# easy-to-remember split pane commands
bind | split-window -h
bind - split-window -v
#bind | split-window -h -c "#{pane_current_path}"
#bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

#
# --- Command aliases ---
#

# open a man page in new window
#bind / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind '~' split-window "exec htop"

# logs
bind '@' split-window -v "exec sudo tail -f /var/log/syslog"

# Reload config
bind-key r source-file ~/.tmux.conf \; display "Reloading ~/.tmux.conf"

# monitor window
bind-key m setw monitor-activity

# Prevent Tmux from displaying "Activity in window X"
set -g visual-activity off

# quick session switch
bind-key -n M-, switch -t main
bind-key -n M-. switch -t system

# Fake 80 coloum term, and reset
bind-key y setw force-width 81
bind-key u setw force-width 0

# Join Windows
#bind-key J command-prompt -p "join pane from:" "join-pane -s '%%'"
#bind-key S command-prompt -p "send pane to:" "join-pane -t '%%'"

#
# --- Plugins ---
#
set -g @plugin 'tmux-plugins/tmux-logging'
# prefix + I - fetch the plugin and source it

#
# --- Statusbar ---
#

# toggle statusbar
bind-key b set-option status

# default statusbar colors
#if-shell "[[ `tmux -V | cut -c6-9 -lt 2.9 ]]" "set -g status-fg white
#<2.9
set -q -g status-fg white
set -q -g status-bg colour234
set -q -g status-attr default
# >2.8
set -q -g status-style fg=white,bg=colour234,default

# default window title colors
#set-window-option -g window-status-fg cyan
#set-window-option -g window-status-bg blue
#set-window-option -g window-status-attr dim
# Inactive/default windows in status bar
set-window-option -g window-status-format '#[bg=colour234,fg=colour60,dim] #I #W#[bg=colour234,fg=color244,dim]#F '

# active window title colors
#set-window-option -g window-status-current-fg blue
#set-window-option -g window-status-current-bg cyan
#set-window-option -g window-status-current-attr dim
set-window-option -g window-status-current-format '#[bg=colour244,fg=colour232] #I #W #[default]'

# Alerted window in status bar. Windows which have an alert (bell, activity or content).
#set-window-option -g window-status-alert-fg red
#set-window-option -g window-status-alert-bg white

# command/message line colors
# <2.9
set -q -g message-fg white
set -q -g message-bg black
set -q -g message-attr bright
# > 2.8
set -q -g message-style fg=white,bg=black,bright

# center align the window list
set -g status-justify left

# Status bar text / commands
set -g status-right ""
set -g status-left ""
#if '[ -z "$DISPLAY" ]' 'set -g status-left "#[bg=black,fg=colour244,dim][ #[bg=black,fg=white,bright]#H #[bg=black,fg=colour244]] #[default]"'
#if '[ -z "$DISPLAY" ]' 'set -g status-left-length 20'
#if '[ -z "$DISPLAY" ]' 'set -g status-right "#[fg=colour67]%a %Y-%m-%d #[fg=colour143,dim]%H:%M #[default]"'
#if '[ -z "$DISPLAY" ]' 'set -g status-right-length 50'

set -g status-left "#[bg=black,fg=colour244,dim][ #[bg=black,fg=white,bright]#H #[bg=black,fg=colour244]] #[default]"
set -g status-left-length 20
#set -g status-right "#[fg=colour67]%a %Y-%m-%d #[fg=colour143,dim]%H:%M #[default]"
set -g status-right "#[fg=white,dim]#(/sbin/ip addr show tun0 2>/dev/null | /bin/grep 10.10.| /usr/bin/awk '{ print \"tun0 = \",$2}')     #[fg=colour67]%a %Y-%m-%d #[fg=colour143,dim]%H:%M #[default]"
set -g status-right-length 50
